{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","uuidv4","validationSchema","yup","name","required","number","length","ContactForm","state","initialValues","onSubmit","resetForm","setSubmitting","props","id","className","styles","contactForm","nameLabel","type","contactFormInput","errorMessage","numberLabel","submitButton","Component","Filter","initialValue","onFilterChange","inputWrapper","filterLabel","filterInput","value","onChange","e","target","defaultProps","ContactList","contacts","onDeleteButtonClick","contactsList","map","contact","idx","even","odd","deleteButton","onClick","App","filter","handleSubmit","contactObj","some","alert","setState","prevState","handleFilterChange","handleDeleteContact","getFilteredContactsList","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","this","prevProps","setItem","stringify","filteredContactsList","title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ba35631.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3xI8E\",\"nameLabel\":\"ContactForm_nameLabel__1Gb9e\",\"numberLabel\":\"ContactForm_numberLabel__1WTHH ContactForm_nameLabel__1Gb9e\",\"contactFormInput\":\"ContactForm_contactFormInput__2dtlk\",\"errorMessage\":\"ContactForm_errorMessage__174Jr\",\"submitButton\":\"ContactForm_submitButton__1Teua\"};","import { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\nuuidv4();\r\n\r\nconst validationSchema = yup.object({\r\n  name: yup.string().required(\"Enter contact's name\"),\r\n  number: yup\r\n    .string()\r\n    .length(10, 'Example: 0930939393')\r\n    .required(\"Enter contact's phone\"),\r\n});\r\n\r\nexport default class ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = { name: '', number: '' };\r\n\r\n  render() {\r\n    return (\r\n      <Formik\r\n        initialValues={{ name: '', number: '' }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={({ name, number }, { resetForm, setSubmitting }) => {\r\n          this.props.onSubmit({ name, number, id: uuidv4() });\r\n          setSubmitting(false);\r\n          resetForm();\r\n        }}\r\n      >\r\n        <Form className={styles.contactForm}>\r\n          <label className={styles.nameLabel}>\r\n            Name:\r\n            <Field\r\n              type=\"text\"\r\n              name=\"name\"\r\n              className={styles.contactFormInput}\r\n            />\r\n            <span className={styles.errorMessage}>\r\n              <ErrorMessage name=\"name\" />\r\n            </span>\r\n          </label>\r\n\r\n          <label className={styles.numberLabel}>\r\n            Number:\r\n            <Field\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              className={styles.contactFormInput}\r\n            />\r\n            <span className={styles.errorMessage}>\r\n              <ErrorMessage name=\"number\" />\r\n            </span>\r\n          </label>\r\n          <button type=\"submit\" className={styles.submitButton}>\r\n            Add contact\r\n          </button>\r\n        </Form>\r\n      </Formik>\r\n    );\r\n  }\r\n}","import PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nexport default function Filter({ initialValue, onFilterChange }) {\r\n  return (\r\n    <div className={styles.inputWrapper}>\r\n      <label className={styles.filterLabel}>\r\n        Find contacts by name:\r\n        <input\r\n          className={styles.filterInput}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={initialValue}\r\n          onChange={e => {\r\n            onFilterChange(e.target.value);\r\n          }}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.defaultProps = {\r\n  initialValue: '',\r\n};\r\nFilter.propTypes = PropTypes.shape({\r\n  initialValue: PropTypes.string,\r\n  onFilterChange: PropTypes.func.isRequired,\r\n}).isRequired;","import PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nexport default function ContactList({ contacts, onDeleteButtonClick }) {\r\n  return (\r\n    <ul className={styles.contactsList}>\r\n      {contacts.map((contact, idx) => (\r\n        <li\r\n          key={contact.id}\r\n          className={idx % 2 === 0 ? styles.even : styles.odd}\r\n        >\r\n          <span>\r\n            {contact.name}: {contact.number}\r\n          </span>\r\n          <button\r\n            type=\"button\"\r\n            id={contact.id}\r\n            className={styles.deleteButton}\r\n            onClick={e => onDeleteButtonClick(e.target.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = PropTypes.shape({\r\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onDeleteButtonClick: PropTypes.func.isRequired,\r\n}).isRequired;","import { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport styles from \"./App.css\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handleSubmit = (contactObj) => {\n    if (this.state.contacts.some(({ name }) => name === contactObj.name)) {\n      return alert(`${contactObj.name} already exists in your phonebook`);\n    }\n    this.setState((prevState) => {\n      return {\n        contacts: [...prevState.contacts, contactObj],\n      };\n    });\n  };\n\n  handleFilterChange = (filter) => {\n    this.setState({\n      filter,\n    });\n  };\n\n  handleDeleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  getFilteredContactsList = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContactsList = this.getFilteredContactsList();\n    return (\n      <div>\n        <h1 className={styles.title}>Phonebook</h1>\n        <ContactForm onSubmit={this.handleSubmit} />\n\n        {contacts.length > 0 && <h2 className={styles.title}>Contacts:</h2>}\n        {contacts.length > 1 && (\n          <Filter\n            initialValue={filter}\n            onFilterChange={this.handleFilterChange}\n          />\n        )}\n        {filteredContactsList.length > 0 && (\n          <ContactList\n            contacts={filteredContactsList}\n            onDeleteButtonClick={this.handleDeleteContact}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__3GrBH\",\"listItem\":\"ContactList_listItem__bToZO\",\"even\":\"ContactList_even__2T0dj ContactList_listItem__bToZO\",\"odd\":\"ContactList_odd__1qEQD ContactList_listItem__bToZO\",\"deleteButton\":\"ContactList_deleteButton__21k6G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"Filter_inputWrapper__2RBt8\",\"filterLabel\":\"Filter_filterLabel__2HBjU\",\"filterInput\":\"Filter_filterInput__3Y1Lx\"};"],"sourceRoot":""}